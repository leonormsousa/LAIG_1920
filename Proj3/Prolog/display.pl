/**board([
    [7, [-7, 'B'], [-5, 'B'], [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B'], [5, 'B'], [7, 'B']],
    [6, [-8, 'B'], [-6, 'B'], [-4, 'B'], [-2, 'B'], [0, 'B'], [2, 'B'], [4, 'B'], [6, 'B'], [8, 'B']],
    [5, [-9, 'B'], [-7, 'B'], [-5, 'B'], [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B'], [5, 'B'], [7, 'B'], [9, 'B']],
    [4, [-10, 'B'], [-8, 'B'], [-6, 'B'], [-4, 'B'], [-2, 'B'], [0, 'B'], [2, 'B'], [4, 'B'], [6, 'B'], [8, 'B'], [10, 'B']],
    [3, [-11, 'B'], [-9, 'B'], [-7, 'B'], [-5, 'B'], [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B'], [5, 'B'], [7, 'B'], [9, 'B'], [11, 'B']],
    [2, [-12, 'B'], [-10, 'B'], [-8, 'B'], [-6, 'B'], [-4, 'B'], [-2, 'B'], [0, 'B'], [2, 'B'], [4, 'B'], [6, 'B'], [8, 'B'], [10, 'B'], [12, 'B']],
    [1, [-13, 'B'], [-11, 'B'], [-9, 'B'], [-7, 'B'], [-5, 'B'], [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B'], [5, 'B'], [7, 'B'], [9, 'B'], [11, 'B'], [13, 'B']],
    [0, [-14, 'B'], [-12, 'B'], [-10, 'B'], [-8, 'B'], [-6, 'B'], [-4, 'B'], [-2, 'B'], [0, 'B'], [2, 'B'], [4, 'B'], [6, 'B'], [8, 'B'], [10, 'B'], [12, 'B'], [14, 'B']],
    [-1, [-13, 'B'], [-11, 'B'], [-9, 'B'], [-7, 'B'], [-5, 'B'], [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B'], [5, 'B'], [7, 'B'], [9, 'B'], [11, 'B'], [13, 'B']],
    [-2, [-12, 'B'], [-10, 'B'], [-8, 'B'], [-6, 'B'], [-4, 'B'], [-2, 'B'], [0, 'B'], [2, 'B'], [4, 'B'], [6, 'B'], [8, 'B'], [10, 'B'], [12, 'B']],
    [-3, [-11, 'B'], [-9, 'B'], [-7, 'B'], [-5, 'B'], [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B'], [5, 'B'], [7, 'B'], [9, 'B'], [11, 'B']],
    [-4, [-10, 'B'], [-8, 'B'], [-6, 'B'], [-4, 'B'], [-2, 'B'], [0, 'B'], [2, 'B'], [4, 'B'], [6, 'B'], [8, 'B'], [10, 'B']],
    [-5, [-9, 'B'], [-7, 'B'], [-5, 'B'], [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B'], [5, 'B'], [7, 'B'], [9, 'B']],
    [-6, [-8, 'B'], [-6, 'B'], [-4, 'B'], [-2, 'B'], [0, 'B'], [2, 'B'], [4, 'B'], [6, 'B'], [8, 'B']],
    [-7, [-7, 'B'], [-5, 'B'], [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B'], [5, 'B'], [7, 'B']]
]).*/

board([
    [2, [-2, 'B'], [0, 'B'], [2, 'B']],
    [1, [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B']],
    [0, [-4, 'B'], [-2, 'B'], [0, 'B'], [2, 'B'], [4, 'B']],
    [-1, [-3, 'B'], [-1, 'B'], [1, 'B'], [3, 'B']],
    [-2, [-2, 'B'], [0, 'B'], [2, 'B']]
]).

/**board([
    [2, [-2, 'B'], [0, 1], [2, 1]],
    [1, [-3, 1], [-1, 1], [1, 'B'], [3, 2]],
    [0, [-4, 1], [-2, 1], [0, 1], [2, 2], [4, 2]],
    [-1, [-3, 1], [-1, 'B'], [1, 1], [3, 1]],
    [-2, [-2, 1], [0, 2], [2, 'B']]
]).*/

displayMenu :-
    write('|                                                       |\n'),
    write('|                  ___  __   ___   ___                  |\n'),
    write('|                   |  |  |   |   |                     |\n'),
    write('|                   |  | _|   |   |__                   |\n'),
    write('|                   |  |\\     |      |                  |\n'),
    write('|                  _|_ | \\_  _|_  ___|                  |\n'),
    write('|                                                       |\n'),
    write('|                                                       |\n'),
    write('|              ___________________________              |\n'),
    write('|              |                         |              |\n'),
    write('|              |   1. Player vs Player   |              |\n'),
    write('|              |_________________________|              |\n'),
    write('|              |                         |              |\n'),
    write('|              |  2. Player vs Computer  |              |\n'),
    write('|              |_________________________|              |\n'),
    write('|              |                         |              |\n'),
    write('|              | 3. Computer vs Computer |              |\n'),
    write('|              |_________________________|              |\n'),
    write('|                                                       |\n'),
    write('|                                                       |\n').

displayDifficulty :-
    write('|                                                       |\n'),
    write('|   __  ___  ___  ___ ___  ____            _____        |\n'),
    write('|  |  \\  |  |    |     |  |     |   | |      |   \\  /   |\n'),
    write('|  |   | |  |__  |__   |  |     |   | |      |    \\/    |\n'),
    write('|  |   | |  |    |     |  |     |   | |      |    |     |\n'),
    write('|  |__/ _|_ |    |    _|_ |____ |___| |___   |    |     |\n'),
    write('|                                                       |\n'),
    write('|                                                       |\n'),
    write('|              ___________________________              |\n'),
    write('|              |                         |              |\n'),
    write('|              |  1. Easy                |              |\n'),
    write('|              |_________________________|              |\n'),
    write('|              |                         |              |\n'),
    write('|              |  2. Medium              |              |\n'),
    write('|              |_________________________|              |\n'),
    write('|              |                         |              |\n'),
    write('|              |  3. Expert              |              |\n'),
    write('|              |_________________________|              |\n'), 
    write('|              |                         |              |\n'),
    write('|              |  4. Hardcore            |              |\n'),
    write('|              |_________________________|              |\n'),
    write('|                                                       |\n'),
    write('|                                                       |\n').

drawSpace(0).
drawSpace(N) :- write(' '), N1 is N-1, drawSpace(N1).

displayCell([_|[P]]):- write(P), write(' ').
displayLineCells([]).
displayLineCells([H|T]):- displayCell(H), displayLineCells(T).
displayLine([H|T]) :- (H<0 -> write(H); write(' '), write(H)), (H>0 -> N1 is H+1, drawSpace(N1); N1 is -H+1, drawSpace(N1)), (H<0 -> write('\\ '); (H>0 -> write('/ '); write('| '))), displayLineCells(T), (H<0 -> write('/ \n'); (H>0 -> write('\\ \n'); write('| \n'))).
displayBoard([]).
displayBoard([H|T]) :- displayLine(H), displayBoard(T).

%display_game(+Board,+Player)
display_game(Board, _) :- displayBoard(Board).

writeError :- write('\n That play is not possible. \n\n').
writeError(M) :- write('\n'), write(M), write('\n\n').
writeWinner(Winner) :- write('The Winner is:  P'), write(Winner), write('\n').